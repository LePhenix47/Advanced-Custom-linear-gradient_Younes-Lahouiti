(()=>{"use strict";const t="\n@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;400;500;700&display=swap);\n@media(prefers-reduced-motion:reduce) {\n    *, :after, :before {\n        animation: none !important;\n        transition: none !important\n    }\n}\n\n*, :after, :before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0\n}\n\n::-moz-selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: var(--selection-color)\n}\n\n::selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: var(--selection-color)\n}\n\nhtml {\n    color-scheme: dark light;\n    scroll-behavior: smooth\n}\n\nbody {\n    background-color: var(--bg-primary);\n    color: var(--color-primary);\n    min-height: 100vh;\n    overflow-x: hidden;\n    transition: background-color .65s ease-in-out, color .35s ease-in-out\n}\n\n:is(ul, ol) {\n    list-style-type: none\n}\n\nbutton {\n    background-color: transparent;\n    border-color: transparent;\n    color: inherit;\n    font-family: inherit\n}\n\nbutton:hover {\n    cursor: pointer\n}\n\nbutton:hover:disabled {\n    cursor: not-allowed\n}\n\ninput {\n    border-color: transparent;\n    font-family: inherit;\n    outline-color: transparent\n}\n\ninput:hover {\n    cursor: pointer\n}\n\ninput:focus {\n    border-color: transparent;\n    outline: transparent\n}\n\ninput:disabled {\n    cursor: not-allowed\n}\n\ntextarea {\n    font-family: inherit\n}\n\ntextarea, textarea:focus {\n    border-color: transparent\n}\n\ntextarea:focus {\n    outline: transparent\n}\n\na {\n    color: inherit;\n    text-decoration: none\n}\n\na:visited {\n    color: currentColor\n}\n\nlabel:hover {\n    cursor: pointer\n}\n\nfieldset {\n    border-color: transparent\n}\n\nlegend {\n    position: static\n}\n\ndialog {\n    inset: 50%;\n    margin: 0;\n    padding: 0;\n    position: fixed;\n    translate: -50% -50%;\n    z-index: 0\n}\n\ndialog, select {\n    border: transparent\n}\n\nselect {\n    font-family: inherit\n}\n\nselect:hover {\n    cursor: pointer\n}\n\noption {\n    font-family: inherit\n}\n\n:is(p, h1, h2, h3, h4, h5, h6, span):empty {\n    display: none !important\n}\ninput[type=text]:hover {\n  cursor: text;\n}\ninput[type=button]:hover {\n  cursor: pointer;\n}\ninput[type=date]:hover {\n  cursor: text;\n}\ninput[type=datetime]:hover {\n  cursor: text;\n}\ninput[type=datetime-local]:hover {\n  cursor: text;\n}\ninput[type=email]:hover {\n  cursor: text;\n}\ninput[type=month]:hover {\n  cursor: text;\n}\ninput[type=week]:hover {\n  cursor: text;\n}\ninput[type=password]:hover {\n  cursor: text;\n}\ninput[type=tel]:hover {\n  cursor: text;\n}\ninput[type=time]:hover {\n  cursor: text;\n}\ninput[type=url]:hover {\n  cursor: text;\n}\ninput[type=submit]:hover {\n  cursor: pointer;\n}\ninput[type=reset]:hover {\n  cursor: pointer;\n}\ninput[type=image]:hover {\n  cursor: pointer;\n}\ninput[type=hidden]:hover {\n  cursor: pointer;\n}\ninput[type=file] {\n  --file-selector-display: initial;\n  --file-selector-width: 80px;\n  --file-selector-height: 21px;\n}\ninput[type=file]:hover {\n  cursor: pointer;\n}\ninput[type=file]::file-selector-button {\n  display: var(--file-selector-display);\n  height: var(--file-selector-height);\n  width: var(--file-selector-width);\n}\ninput[type=color] {\n  background-color: transparent;\n  --color-swatch-display: inline-block;\n  --color-swatch-height: 100%;\n  --color-swatch-border-width: 1px;\n  --color-swatch-border-color: currentColor;\n}\ninput[type=color]:hover {\n  cursor: pointer;\n}\ninput[type=color]::-moz-color-swatch {\n  display: var(--color-swatch-display);\n  height: var(--color-swatch-height);\n  border: var(--color-swatch-border-width) solid var(--color-swatch-border-color);\n}\ninput[type=color]::-webkit-color-swatch {\n  display: var(--color-swatch-display);\n  height: var(--color-swatch-height);\n  border: var(--color-swatch-border-width) solid var(--color-swatch-border-color);\n}\ninput[type=search] {\n  --cancel-button-display: initial;\n  --results-button-display: initial;\n}\ninput[type=search]:hover {\n  cursor: text;\n}\ninput[type=search]::-webkit-search-cancel-button {\n  display: var(--cancel-button-display);\n}\ninput[type=search]::-webkit-search-results-button {\n  display: var(--results-button-display);\n}\ninput[type=number] {\n  --inner-spin-appearance: auto;\n  --outer-spin-appearance: auto;\n  --moz-appearance: initial;\n  /*\n      Ignore the warning, this is to reset the input on Firefox\n      */\n  -moz-appearance: var(--moz-appearance);\n}\ninput[type=number]:hover {\n  cursor: text;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  appearance: var(--inner-spin-appearance);\n}\ninput[type=number]::-webkit-outer-spin-button {\n  appearance: var(--outer-spin-appearance);\n}\ninput[type=range] {\n  border-radius: var(--thumb-border-radius);\n  --track-width: 160px;\n  --track-height: 20px;\n  --track-bg: #e9e9ed;\n  --track-appearance: none;\n  background-color: var(--track-bg);\n  appearance: var(--track-appearance);\n  overflow: hidden;\n  --thumb-appearance: none;\n  --thumb-bg: #484851;\n  --thumb-border-color: white;\n  --thumb-border-width: 0px;\n  --thumb-border-radius: 100vmax;\n  --thumb-width: 15px;\n  --thumb-height: 15px;\n  --inner-track-size: calc(var(--track-width));\n  --inner-track-offset: calc(\n    -1 * var(--track-width) - var(--thumb-width) / 2\n  );\n  --inner-track-bg: #2374ff;\n}\ninput[type=range]:hover {\n  cursor: grab;\n}\ninput[type=range]:active {\n  cursor: grabbing;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n  background-color: var(--track-bg);\n  width: var(--track-width);\n  height: var(--track-bg);\n}\ninput[type=range]::-moz-range-track {\n  background-color: var(--track-bg);\n  width: var(--track-width);\n  height: var(--track-bg);\n}\ninput[type=range]::-webkit-slider-thumb {\n  appearance: var(--thumb-appearance);\n  -webkit-appearance: var(--thumb-appearance);\n  background-color: var(--thumb-bg);\n  color: var(--thumb-bg);\n  border: var(--thumb-border-width) solid var(--thumb-border-color);\n  border-radius: var(--thumb-border-radius);\n  width: var(--thumb-width);\n  height: var(--thumb-height);\n  box-shadow: var(--inner-track-offset) 0 0 var(--inner-track-size) var(--inner-track-bg);\n}\ninput[type=range]::-moz-range-thumb {\n  appearance: var(--thumb-appearance) !important;\n  background-color: var(--thumb-bg);\n  border: var(--thumb-border-width) solid var(--thumb-border-color);\n  border-radius: var(--thumb-border-radius);\n  width: var(--thumb-width);\n  height: var(--thumb-height);\n  box-shadow: var(--inner-track-offset) 0 0 var(--inner-track-size) var(--inner-track-bg);\n}\n",e="\n\n/* \n    Hides the element and all its descendants from view\n */\n.hide {\n    display: none !important;\n}\n\n/**\n * Visually hide an element, but leave it available for screen readers\n\n https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css\n\n http://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n\n */\n.screen-readers-only {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n\n/**\n * Extends the .screen-reader class to allow the element to be focusable when navigated to via the keyboard\n * @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css\n * @link https://www.drupal.org/node/897638\n */\n.screen-reader-focusable {\n    &:is(:active, :hover) {\n        clip: auto;\n        height: auto;\n        margin: 0;\n        overflow: visible;\n        position: static;\n        white-space: normal;\n        width: auto;\n    }\n}\n\n/* \n    Disables pointer (click on desktop and tap on mobile) events for the element and its descendants \n*/\n.no-pointer-events {\n    pointer-events: none;\n}\n\n\n.active {}\n\n.dragging {\n    opacity: 25%;\n}\n",n="\n:host {\n    --bg-primary: rgb(255, 255, 255);\n    --bg-secondary: #f0efef;\n    --bg-tertiary: #676767;\n\n    --semi-transparent-bg: rgba(255, 255, 255, 50%);\n\n    --color-primary: black;\n    --color-secondary: gray;\n\n    --scrollbar-track-bg-color: white;\n\n    --disabled-button-bg: #afafaf;\n\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0;\n\n    --selection-bg-color: hwb(240 0% 0%);\n    --selection-color: white;\n}\n\n::backdrop {\n    --backdrop-bg-color: rgba(255, 255, 255, 0.5);\n\n    --scrollbar-track-bg-color: white;\n\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0;\n}\n",r="\n@media (prefers-color-scheme: dark) {\n    :host {\n        --bg-primary: black;\n        --bg-secondary: #232323;\n        --bg-tertiary: #7a7a7a;\n\n        --color-primary: white;\n\n        --semi-transparent-bg: rgba(0, 0, 0, 50%);\n\n        --scrollbar-track-bg-color: black;\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f;\n\n        --selection-bg: #838383;\n        --selection-color: white;\n\n        --selection-bg-color: orange;\n        --selection-color: black;\n    }\n\n\n    ::backdrop {\n        --backdrop-bg-color: rgba(0, 0, 0, 0.5);\n\n        --scrollbar-track-bg-color: black;\n\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f;\n    }\n}\n",o=document.createElement("template");o.innerHTML=`\n  <style>\n    ${e}\n    ${t}\n    ${n}\n    ${r}\n\n    /* Actual CSS style for the web component*/\n    \n web-component{\n  isolation: isolate;\n  /* Other CSS styles here */\n }\n\n  </style>\n  \n  \n <figure>\n  <slot name="title"></slot>\n  <slot name="image"></slot>\n </figure>\n\n`;class i extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"}),e=o.content.cloneNode(!0);t.appendChild(e)}static get observedAttributes(){return[]}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(t,e,n){t}}customElements.define("web-component",i);class s{lineWidth;lineFill;circleFill;circleRadius;midX;midY;ctx;strokeWidth;canvas;constructor(t){this.canvas=t,this.ctx=this.canvas.getContext("2d"),this.lineWidth=2,this.lineFill="#5b5b5b",this.circleFill="#4285f4",this.circleRadius=this.canvas.width/20,this.midX=this.canvas.width/2,this.midY=this.canvas.height/2}drawLine({initX:t,initY:e,arrayOfCoords:n=[{x:0,y:0}],lineDash:r=[],strokeFill:o=this.lineFill,strokeWidth:i=this.lineWidth}){this.ctx.beginPath(),this.ctx.setLineDash(r),this.ctx.moveTo(t,e);for(const{x:t,y:e}of n)this.ctx.lineTo(t,e);this.ctx.strokeStyle=o,this.ctx.lineWidth=i,this.ctx.stroke(),this.ctx.closePath()}drawCircle(t,e,n=!1){this.ctx.fillStyle=this.circleFill,this.ctx.beginPath(),this.ctx.arc(t,e,this.circleRadius,0,2*Math.PI),this.ctx.fill(),n&&(this.ctx.strokeStyle=this.lineFill,this.ctx.lineWidth=this.strokeWidth,this.ctx.stroke())}}const a=class extends s{offsetPickerX;offsetPickerY;computedOffsetX;computedOffsetY;pointerInfos;constructor(t,e){super(t),this.offsetPickerX=this.midX,this.offsetPickerY=this.midY,this.pointerInfos=e,this.computedOffsetX=0,this.computedOffsetY=0,this.drawCardinalLines()}drawCardinalLines(){this.drawLine({initX:0,initY:this.midY,arrayOfCoords:[{x:this.canvas.width,y:this.midY}],lineDash:[this.lineWidth,this.lineWidth],strokeFill:this.lineFill,strokeWidth:this.lineWidth}),this.drawLine({initX:this.midX,initY:0,arrayOfCoords:[{x:this.midX,y:this.canvas.height}],lineDash:[this.lineWidth,this.lineWidth],strokeFill:this.lineFill,strokeWidth:this.lineWidth})}checkOverflow(){this.offsetPickerX+this.circleRadius>this.canvas.width&&(this.offsetPickerX=this.canvas.width-this.circleRadius);this.offsetPickerY+this.circleRadius>this.canvas.height&&(this.offsetPickerY=this.canvas.height-this.circleRadius)}checkUnderflow(){this.offsetPickerX-this.circleRadius<0&&(this.offsetPickerX=0+this.circleRadius);this.offsetPickerY-this.circleRadius<0&&(this.offsetPickerY=0+this.circleRadius)}updateTrackerCoords(){const{isPressing:t,x:e,y:n}=this.pointerInfos;t&&(this.offsetPickerX=e,this.offsetPickerY=n,this.checkOverflow(),this.checkUnderflow(),this.computedOffsetX=Math.round((this.offsetPickerX-this.midX)/10*4.5),this.computedOffsetY=Math.round((this.midY-this.offsetPickerY)/10*4.5))}getOffsets(t=!1){const e=(this.computedOffsetX+20)/40,n=(this.computedOffsetY+20)/40,r=Math.round(100*e),o=Math.round(100*(1-n));return t?{x:r,y:o}:{x:this.computedOffsetX,y:this.computedOffsetY}}trackPointer(){this.drawCardinalLines(),this.drawLine({initX:this.midX,initY:this.midY,arrayOfCoords:[{x:this.offsetPickerX,y:this.offsetPickerY}],strokeFill:this.lineFill,strokeWidth:this.lineWidth}),this.drawCircle(this.offsetPickerX,this.offsetPickerY)}};function c(t,e=3){if("number"!=typeof t||"number"!=typeof e)throw new TypeError(`Expected both arguments to be of type number, instead got:\n Number: ${t} of type ${typeof t}\n Float: ${e} of type ${typeof e}\n `);const{isNaN:n}=Number;if(n(t)||n(e))throw new TypeError(`Got NaN number values:\nNumber: ${t} of type ${typeof t}\nFloat: ${e} of type ${typeof e}\n    `);const r=10**e;return Math.trunc(t*r)/r}function l(t){const e=Number(t.replace("%","")),{isNaN:n}=Number;if(n(e))throw new Error(`Invalid percentage: ${t}`);return e/100}function d(t){return Number(`0x${t}`)}function h(t){if("string"==typeof t){if(!/^(-?\d+(\.\d+)?%)$/.test(t))throw new Error(`Invalid string percentage: ${t}`);t=Number(t.replace("%",""))}t<0&&(t=0);t>100&&(t=100);const e=t/100,n=Math.round(255*e).toString(16).toUpperCase();return 1===n.length?`0${n}`:n}function p(t){const[e,n,r]=t.map((t=>(t/=255)<=.03928?t/12.92:((t+.055)/1.055)**2.4));return.2126*e+.7152*n+.0722*r}function u(t){const e="number"!=typeof t,{isNaN:n}=Number,r=n(t);if(e||r){throw new TypeError(e?`Expected 'radians' to be a valid number, but got: ${t}`:`Conversion to degrees will result in NaN for radians: ${t}`)}const{PI:o}=Math;return c(180*t/o,3)}function f(t,e){t.preventDefault();const n="mouse"===t.pointerType&&0===t.button,r="touch"===t.pointerType;(n||r)&&(e.isPressing="pointerdown"===t.type)}function g(t,e,n){t.preventDefault();const r=n.getBoundingClientRect();e.x=Math.round(t.x-r.x),e.y=Math.round(t.y-r.y)}function b(t,e){let n=u(Math.atan2(t,e));n=c(n,0);return n<0&&(n+=360),n}function m(t,e){const n=e.getBoundingClientRect();return{mouseX:t.x-n.x,mouseY:n.y-t.y}}const{log:v,error:y,table:w,time:x,timeEnd:_,timeStamp:k,timeLog:C,assert:$,clear:N,count:A,countReset:I,group:S,groupCollapsed:E,groupEnd:R,profile:O,profileEnd:T,trace:P,warn:L,debug:z,info:Y,dir:G,dirxml:M}=console;function X(t,e){return function(t,e){if(!e)return Array.from(document.getElementsByClassName(t));const n=e?.tagName?.includes("-");return n?Array.from(e.shadowRoot.getElementsByClassName(t)):Array.from(e.getElementsByClassName(t))}(t,e)[0]}function B(t,e){if(!e)return document.querySelector(t);const n=e?.tagName?.includes("-");return n?e.shadowRoot.querySelector(t):e.querySelector(t)}function j(t,e){if(!e)return Array.from(document.querySelectorAll(t));return e.tagName.includes("-")?Array.from(e.shadowRoot.querySelectorAll(t)):Array.from(e.querySelectorAll(t))}function F(t,e){return t.closest(e)}function W(t){return Array.from(t.classList)}function U(t,e,n=document.body){const r=e.toString();return n.style.setProperty(t,r)}function H(t,e,n){n.setAttribute(t,e.toString())}function V(t,e){return e.getAttribute(t)}const D=document.createElement("template");D.innerHTML=`\n\x3c!-- CSS Style --\x3e\n  <style>\n    ${e}\n    ${t}\n    ${n}\n    ${r}\n\n    /* Actual CSS style for the web component*/\n    \n.picker__container {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.picker__containers {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.picker{\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n}\n\n.picker__label {\n  display: inline-flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 15px;\n  text-align: right;\n\n  padding: 5px;\n}\n\n.picker__outputs {\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n}\n\n.picker__output-container {\n   background-color: transparent;\n   border: 2px solid var(--bg-tertiary);\n   border-radius: 5px;\n   width: 50px;\n   font-size: 16px;\n}\n\n.picker__canvas {\n  --_canvas-size: 100px;\n\n  border: 2px solid var(--bg-tertiary);\n  width: var(--_canvas-size);\n  height: var(--_canvas-size);\n\n  border-radius: 5px;\n}\n\n  </style>\n\n  \x3c!-- HTML Content --\x3e\n  \n<div class="picker__container">\n  <h2 class="picker__title">Offsets</h2>\n\n  <div class="picker">\n\n    <div class="picker__outputs">\n      <div class="picker__output-container">\n        <label for="x-offset" class="picker__label">X offset</label>\n        <output class="picker__output-field" id="x-offset" value="50" min="0" max="100" >50</output>\n        <span class="picker__unit">%</span>\n      </div>\n  \n      <div class="picker__output-container">\n        <label for="y-offset" class="picker__label">Y offset</label>\n        <output class="picker__output-field" id="y-offset" value="50" min="0" max="100" >50</output>\n        <span class="picker__unit">%</span>\n      </div>\n    </div>\n    \n    <canvas class="picker__canvas" width="200" height="200"></canvas>\n  </div>\n</div>\n\n`;class q extends HTMLElement{animationId;canvas;pointerInfos;effectHandler;ctx;constructor(){super();const t=this.attachShadow({mode:"open"}),e=D.content.cloneNode(!0);t.appendChild(e),this.animationId=NaN,this.pointerInfos={x:NaN,y:NaN,isPressing:!1},this.effectHandler,this.canvas,this.ctx,this.animateCanvas=this.animateCanvas.bind(this)}static get observedAttributes(){return["x","y","title"]}get x(){return Number(this.getAttribute("x"))}set x(t){const e=t.toString();this.setAttribute("x",e)}get y(){return Number(this.getAttribute("y"))}set y(t){const e=t.toString();this.setAttribute("y",e)}get title(){return this.getAttribute("title")}set title(t){this.setAttribute("title",t)}setCanvasSize(t,e){this.canvas.width=t,this.canvas.height=e}animateCanvas(){try{this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.animationId=requestAnimationFrame(this.animateCanvas),this.effectHandler.updateTrackerCoords(),this.effectHandler.trackPointer()}catch(t){console.error("Stopped the canvas animation",t),this.cancelAnimation()}}cancelAnimation(){cancelAnimationFrame(this.animationId)}connectedCallback(){v("Added the position picker to the DOM");const t=B(".picker__container",this.shadowRoot);t.addEventListener("pointerup",(t=>{f(t,this.pointerInfos)})),t.addEventListener("pointerdown",(t=>{f(t,this.pointerInfos)})),t.addEventListener("pointermove",(t=>{g(t,this.pointerInfos,this.canvas);const{x:e,y:n}=this.effectHandler.getOffsets(!0);this.x=e,this.y=n}));B(".picker__title",this.shadowRoot).textContent=this.title;const e=B("canvas",this.shadowRoot);this.canvas=e,this.ctx=this.canvas.getContext("2d"),this.setCanvasSize(100,100),this.effectHandler=new a(this.canvas,this.pointerInfos),this.animateCanvas()}disconnectedCallback(){v("Removed the position picker from the DOM"),this.cancelAnimation();const t=B(".picker__container",this.shadowRoot);t.removeEventListener("pointerup",(t=>{f(t,this.pointerInfos)})),t.removeEventListener("pointerdown",(t=>{f(t,this.pointerInfos)})),t.removeEventListener("pointermove",(t=>{g(t,this.pointerInfos,this.canvas);const{x:e,y:n}=this.effectHandler.getOffsets(!0);this.x=e,this.y=n}))}attributeChangedCallback(t,e,n){const r=B(".picker__title",this.shadowRoot),o=B("output#x-offset",this.shadowRoot),i=B("output#y-offset",this.shadowRoot);switch(t){case"x":o.textContent=n;break;case"y":i.textContent=n;break;case"title":r.textContent=n}}}customElements.define("position-picker",q);const J=document.createElement("template");J.innerHTML=`\n\x3c!-- CSS Style --\x3e\n  <style>\n    ${e}\n    ${t}\n    ${n}\n    ${r}\n\n    /* Actual CSS style for the web component*/\n    \n\nbutton {\n  border-color: transparent;\n  background-color: transparent;\n  font-family: inherit;\n  color: inherit;\n}\nbutton:hover {\n  cursor: pointer;\n}\nbutton:disabled {\n  cursor: not-allowed;\n}\n\n.menu__orientation {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-block: 15px;\n  gap: 15px;\n}\n.menu__angle-picker {\n  aspect-ratio: 1;\n  border-radius: 50%;\n  border: 2px solid currentColor;\n  height: 100px;\n  background: rgba(255, 255, 255, 0.05);\n  position: relative;\n}\n.menu__angle-picker--center-dot {\n  content: "";\n  aspect-ratio: 1;\n  border-radius: 50%;\n  position: absolute;\n  translate: -50% -50%;\n  inset: 50%;\n  height: 5px;\n  background-color: currentColor;\n}\n.menu__angle-picker--marker {\n  position: absolute;\n  height: var(--_size);\n  aspect-ratio: 1/2;\n  top: var(--_top);\n  left: var(--_left);\n  translate: -50% -50%;\n  rotate: var(--_initial-degrees);\n  border-bottom-left-radius: 100vmax;\n  border-bottom-right-radius: 100vmax;\n  background-color: currentColor;\n}\n.menu__angle-picker--marker:nth-child(odd) {\n  scale: 75%;\n}\n.menu__angle-picker--marker-0-deg {\n  --_size: 8px;\n  --_initial-degrees: 0deg;\n  --_degrees: -90deg;\n  --_offset: 44px;\n  --_top: calc(50% + var(--_offset) * sin(var(--_degrees)));\n  --_left: calc(50% + var(--_offset) * cos(var(--_degrees)));\n}\n.menu__angle-picker--marker-45-deg {\n  --_size: 8px;\n  --_initial-degrees: 45deg;\n  --_degrees: -45deg;\n  --_offset: 44px;\n  --_top: calc(50% + var(--_offset) * sin(var(--_degrees)));\n  --_left: calc(50% + var(--_offset) * cos(var(--_degrees)));\n}\n.menu__angle-picker--marker-90-deg {\n  --_size: 8px;\n  --_initial-degrees: 90deg;\n  --_degrees: 0deg;\n  --_offset: 44px;\n  --_top: calc(50% + var(--_offset) * sin(var(--_degrees)));\n  --_left: calc(50% + var(--_offset) * cos(var(--_degrees)));\n}\n.menu__angle-picker--marker-135-deg {\n  --_size: 8px;\n  --_initial-degrees: 135deg;\n  --_degrees: 45deg;\n  --_offset: 44px;\n  --_top: calc(50% + var(--_offset) * sin(var(--_degrees)));\n  --_left: calc(50% + var(--_offset) * cos(var(--_degrees)));\n}\n.menu__angle-picker--marker-180-deg {\n  --_size: 8px;\n  --_initial-degrees: 180deg;\n  --_degrees: 90deg;\n  --_offset: 44px;\n  --_top: calc(50% + var(--_offset) * sin(var(--_degrees)));\n  --_left: calc(50% + var(--_offset) * cos(var(--_degrees)));\n}\n.menu__angle-picker--marker-225-deg {\n  --_size: 8px;\n  --_initial-degrees: 225deg;\n  --_degrees: 135deg;\n  --_offset: 44px;\n  --_top: calc(50% + var(--_offset) * sin(var(--_degrees)));\n  --_left: calc(50% + var(--_offset) * cos(var(--_degrees)));\n}\n.menu__angle-picker--marker-270-deg {\n  --_size: 8px;\n  --_initial-degrees: 270deg;\n  --_degrees: 180deg;\n  --_offset: 44px;\n  --_top: calc(50% + var(--_offset) * sin(var(--_degrees)));\n  --_left: calc(50% + var(--_offset) * cos(var(--_degrees)));\n}\n.menu__angle-picker--marker-315-deg {\n  --_size: 8px;\n  --_initial-degrees: 315deg;\n  --_degrees: 225deg;\n  --_offset: 44px;\n  --_top: calc(50% + var(--_offset) * sin(var(--_degrees)));\n  --_left: calc(50% + var(--_offset) * cos(var(--_degrees)));\n}\n.menu__angle-picker--rotator {\n  --_rotation: 0deg;\n  rotate: var(--_rotation);\n  position: absolute;\n  top: 0%;\n  left: 50%;\n  height: 50%;\n  width: 1px !important;\n  background-color: #b6b5b5;\n  translate: -50% 0%;\n  transform-origin: center bottom;\n}\n.menu__angle-picker--rotator::before {\n  content: "";\n  position: absolute;\n  top: 0%;\n  left: 0%;\n  translate: -50% -50%;\n  background-color: var(--color-secondary);\n  height: 10px;\n  outline: 2px solid var(--color-tertiary);\n  aspect-ratio: 1;\n  border-radius: 50%;\n}\n\n  </style>\n\n  \x3c!-- HTML Content --\x3e\n  \n<section class="menu__orientation">\n\n  <div class="menu__angle-picker">\n    \x3c!-- Center point for the circle --\x3e\n    <div class="menu__angle-picker--center-dot"></div>\n\n    \x3c!-- Angles markers --\x3e\n    <div class="menu__angle-picker--marker menu__angle-picker--marker-0-deg"></div>\n    <div class="menu__angle-picker--marker menu__angle-picker--marker-45-deg"></div>\n    <div class="menu__angle-picker--marker menu__angle-picker--marker-90-deg"></div>\n    <div class="menu__angle-picker--marker menu__angle-picker--marker-135-deg"></div>\n    <div class="menu__angle-picker--marker menu__angle-picker--marker-180-deg"></div>\n    <div class="menu__angle-picker--marker menu__angle-picker--marker-225-deg"></div>\n    <div class="menu__angle-picker--marker menu__angle-picker--marker-270-deg"></div>\n    <div class="menu__angle-picker--marker menu__angle-picker--marker-315-deg"></div>\n\n    \x3c!-- Button to set the orientation in degrees in JS --\x3e\n    <button class="menu__angle-picker--rotator"></button>\n  </div>\n  \x3c!-- The number input is only for mobile devices  --\x3e\n  <div class="menu__angle-result">\n    <label for="orientation">Current value:</label>\n    <output for="orientation" class="menu__orientation-output">0°</output>\n  </div>\n</section>\n\n`;class K extends HTMLElement{pointerInfos;constructor(){super();const t=this.attachShadow({mode:"open"}),e=J.content.cloneNode(!0);t.appendChild(e),this.pointerInfos={x:NaN,y:NaN,isPressing:!1}}static get observedAttributes(){return["angle"]}get angle(){const t=this.getAttribute("angle");return Number(t)}set angle(t){const e=t.toString();this.setAttribute("angle",e)}connectedCallback(){const t=B(".menu__orientation",this.shadowRoot);t.addEventListener("pointerup",(t=>{f(t,this.pointerInfos)})),t.addEventListener("pointerdown",(t=>{f(t,this.pointerInfos)}));const e=B(".menu__angle-picker--center-dot",this.shadowRoot);t.addEventListener("pointermove",(t=>{const{mouseX:n,mouseY:r}=m(t,e),o=b(n,r),{isPressing:i}=this.pointerInfos;i&&(this.angle=o)}));const n=B(".menu__angle-picker",this.shadowRoot);n.addEventListener("click",(t=>{const e=t.target;if(e===n)return;const r=W(e);if(r.includes("menu__angle-picker--marker")){v("clicked angle marker!",r);const t=/\d+/g,e=Number(r[1].match(t)[0]);this.angle=e,v({degrees:e})}}))}disconnectedCallback(){const t=B(".menu__orientation",this.shadowRoot);t.removeEventListener("pointerup",(t=>{f(t,this.pointerInfos)})),t.removeEventListener("pointerdown",(t=>{f(t,this.pointerInfos)}));const e=B(".menu__angle-picker--center-dot",this.shadowRoot),n=B(".menu__angle-picker--rotator",this.shadowRoot),r=B(".menu__orientation-output",this.shadowRoot);t.removeEventListener("pointermove",(t=>{const{mouseX:o,mouseY:i}=m(t,e),s=b(o,i),{isPressing:a}=this.pointerInfos;a&&(U("--_rotation",`${s}deg`,n),r.textContent=`${s}°`)}))}attributeChangedCallback(t,e,n){switch(t){case"angle":{const t=B(".menu__angle-picker--rotator",this.shadowRoot),e=B(".menu__orientation-output",this.shadowRoot);U("--_rotation",`${n}deg`,t),e.textContent=`${n}°`;break}}}}function Q(t){return t.charAt(0).toUpperCase()+t.slice(1)}function Z(t){const e=t.replace(/-([a-z])/g,((t,e)=>e.toUpperCase()));return e}function tt(t){const e=t.replaceAll(/\"/g,"").split(";").filter(Boolean);v({styleDeclarations:e});const n={};for(const t of e){const[e,r]=t.split(":").map((t=>t.trim())),o=Z(e);let i=r;"stopOpacity"===o&&(i=l(i)),n[o]=i}return JSON.stringify(n).replaceAll(/"([^"]+)":/g,"$1:")}function et(t,e){if("string"!=typeof t||"string"!=typeof e)throw new TypeError(`Invalid arguments, expected string and option to be strings, instead got respective types: ${typeof t} and ${typeof e}`);switch(e.toLowerCase().trim()){case"lowercase":return t.toLowerCase();case"uppercase":return t.toUpperCase();case"titlecase":{const e=t.split(" ");for(let t=0;t<e.length;t++){const n=e[t].charAt(0).toUpperCase(),r=e[t].slice(1).toLowerCase();e[t]=n+r}return e.join(" ")}case"sentencecase":{const e=t.split(/(?<=[.?!])/);for(let t=0;t<e.length;t++){const n=e[t].trim();if(0===n.length){e[t]="";continue}const r=n.charAt(0).toUpperCase(),o=n.slice(1).toLowerCase();e[t]=r+o}return e.join(" ")}default:throw new Error(`Formatting text error, option not available for: ${e}`)}}function nt(t){const e=t.target;var n;t.type.includes("start")?(n="dragging",e.classList.add(n)):function(t,e){t.classList.remove(e)}(e,"dragging")}function rt(t){const e=j("tr",t),n=["color","offset","opacity"];for(let t=0;t<e.length;t++){const r=j("td",e[t]),o=t+1;B("p",r[1]).textContent=`${o}.`;for(let t=0;t<n.length;t++){const e=n[t],i=B("label",r[t+2]),s=B("input",r[t+2]),a=`input-${e}-${o}`;H("for",a,i),H("id",a,s)}}v(e)}function ot(t,e,n){if(!(t instanceof HTMLInputElement))throw new TypeError("Input parameter must be an input element");if("number"!=typeof e||"number"!=typeof n)throw new TypeError("Invalid min and max values. Both must be numbers");const{isNaN:r}=Number;if(r(e)||r(n))throw new TypeError("Invalid min and max values. Both must not be NaN");if(e>n)throw new RangeError(`Invalid min and max values, min > max: ${e} and max: ${n}`);const o=t.valueAsNumber>n;o&&(t.valueAsNumber=n);const i=t.valueAsNumber<e;i&&(t.valueAsNumber=e),v(o,i)}customElements.define("angle-picker",K);const it=class{isRepeating;stopColors;constructor(){this.isRepeating=!1,this.stopColors=[]}setRepeating(t){this.isRepeating=t}normalizeOpacity(t){const{color:e,opacity:n}=t,r=`${e}${h(n)}`;t.color=r}normalizeOffset(t){const{offset:e}=t,n=e||"";t.offset=n}normalizeAngles(t){const{startAngle:e,endAngle:n,transitionAngle:r}=t,o=e?`${e}deg`:"";t.startAngle=o;const i=n?`, ${n}deg`:"";t.endAngle=i;const s=r?`${r}deg`:"";t.transitionAngle=s}sortStopColorsArrayById(){this.stopColors.sort(((t,e)=>t.id-e.id))}changeColorOrderById(t,e){const n=this.stopColors.findIndex((e=>e.id===t)),r=this.stopColors.findIndex((t=>t.id===e));if(-1===n||-1===r)throw new RangeError(`Invalid id arguments, expected both to ids to return their referring objects but couldn't find them, with oldId (${t}): ${1!==r?"found old object":"couldn't find old object"} and with newId (${e}): ${1!==n?"found new object":"couldn't find new object"}`);const o=this.stopColors[n];o.id=e,this.stopColors.splice(n,1,o);const i=this.stopColors[r];i.id=t,this.stopColors.splice(r,1,i)}};const st=class extends it{orientation;position;constructor(){super(),this.isRepeating=!1,this.orientation=0,this.position={start:"50%",end:"50%"},this.stopColors=[]}normalizeStopColorValues(t){this.normalizeOpacity(t),this.normalizeAngles(t)}isTransitionAngleValid(t,e,n){if(null===n)return!0;const{isNaN:r}=Number,o=[t,e,n];for(const t of o){const e="number"!=typeof t,n=r(t);if(e||n){throw new TypeError(e?`Invalid argument type, must be a number, got: ${t} of type ${typeof t}`:`Invalid number value, received NaN, got: ${t} of type ${typeof t}`)}}return n>=t&&n<=e}setOrientation(t){this.orientation=t}setPositionCoordinates(t){const{start:e,end:n}=t;this.position.start=e;const r=!n;this.position.end=r?"50%":n}addStopColor(t){const e=["id","color","startAngle","endAngle","transitionAngle","opacity"];for(const n of e){if(!t.hasOwnProperty(n))throw new TypeError(`Invalid stop color for the conic gradient, ${n} does not exist on the passed object`)}this.normalizeStopColorValues(t);const{startAngle:n,endAngle:r,transitionAngle:o}=t;this.isTransitionAngleValid(n,r,o),this.stopColors.push(t),this.sortStopColorsArrayById()}generateCssGradient(){if(this.stopColors.length<2)return"none";let t=this.isRepeating?"repeating-conic-gradient(":"conic-gradient(";t+=`from ${this.orientation}deg at ${this.position.start} ${this.position.end}, `;for(let e=0;e<this.stopColors.length;e++){const n=this.stopColors[e],{color:r,startAngle:o,endAngle:i,transitionAngle:s}=n;t+=`${r} ${`${o} ${i} ${s}`}${e===this.stopColors.length-1?"":", "}`}return t+=")",t}};const at=class extends it{orientation;constructor(){super(),this.orientation=0,this.stopColors=[]}setOrientation(t){this.orientation=t}addStopColor(t){const e=["id","color","offset","opacity"];for(const n of e){if(!t.hasOwnProperty(n))throw new TypeError(`Invalid stop color for the linear gradient, ${n} does not exist on the passed object`)}this.normalizeStopColorValues(t),this.stopColors.push(t),this.sortStopColorsArrayById()}normalizeStopColorValues(t){this.normalizeOpacity(t),this.normalizeOffset(t)}generateCssGradient(){if(this.stopColors.length<2)return"none";let t=this.isRepeating?"repeating-linear-gradient(":"linear-gradient(";t+=`${this.orientation}deg, `;for(let e=0;e<this.stopColors.length;e++){const n=this.stopColors[e],{color:r,offset:o}=n;t+=`${r} ${o}${e===this.stopColors.length-1?"":", "}`}return t+=")",t}};const ct=class extends it{shape;position;constructor(){super(),this.isRepeating=!1,this.shape="circle",this.position={start:"50%",end:"50%"},this.stopColors=[]}setShape(t){if("ellipse"!==t&&"circle"!==t)throw new TypeError(`Invalid shape for radial gradient, expected either an ellipse or a circle but instead got ${t}`);this.shape=t}setPositionCoordinates(t){const{start:e,end:n}=t;this.position.start=e;const r=!n;this.position.end=r?"50%":n}addStopColor(t){const e=["id","color","offset","opacity"];for(const n of e){if(!t.hasOwnProperty(n))throw new TypeError(`Invalid stop color for the radial gradient, ${n} does not exist on the passed object`)}this.normalizeStopColorValues(t),this.stopColors.push(t),this.sortStopColorsArrayById()}normalizeStopColorValues(t){this.normalizeOpacity(t),this.normalizeOffset(t)}generateCssGradient(){if(this.stopColors.length<2)return"none";let t=this.isRepeating?"repeating-radial-gradient(":"radial-gradient(";t+=`${this.shape} at ${this.position.start} ${this.position.end}, `;for(let e=0;e<this.stopColors.length;e++){const n=this.stopColors[e],{color:r,offset:o}=n;t+=`${r} ${o}${e===this.stopColors.length-1?"":", "}`}return t+=")",t}};const lt=class{create(t){switch(t){case"linear":return new at;case"radial":return new ct;case"conic":return new st;default:throw new Error(`Unsupported CSS gradient type: ${t}`)}}};const dt=class{spreadMethod;stopColors;gradientTransform;IDENTITY_TRANSFORM;gradientUnits;constructor(){this.spreadMethod="pad",this.IDENTITY_TRANSFORM="rotate(0)",this.gradientTransform=this.IDENTITY_TRANSFORM,this.gradientUnits="objectBoundingBox",this.stopColors=[]}setSpreadMethod(t){this.spreadMethod=t}setGradientTransform(t){const e=new Set(this.gradientTransform);let n=[this.IDENTITY_TRANSFORM];for(const[r,o]of Object.entries(t)){const t=`${r}(${o})`;!e.has(t)&&(n.push(t),e.add(t))}this.gradientTransform=n.join(" ")}sortStopColorsArrayById(){this.stopColors.sort(((t,e)=>t.id-e.id))}changeColorOrderById(t,e){const n=this.stopColors.findIndex((e=>e.id===t)),r=this.stopColors.findIndex((t=>t.id===e));if(-1===n||-1===r)throw new RangeError(`Invalid id arguments, expected both to ids to return their referring objects but couldn't find them, with oldId (${t}): ${1!==r?"found old object":"couldn't find old object"} and with newId (${e}): ${1!==n?"found new object":"couldn't find new object"}`);const o=this.stopColors[n];o.id=e,this.stopColors.splice(n,1,o);const i=this.stopColors[r];i.id=t,this.stopColors.splice(r,1,i)}toReactNativeSvg(t){const e=t.replaceAll(/[\n]+/g,"").split(/<([^>]+)>/g).filter((t=>!!t.trim()));for(let t=0;t<e.length;t++){const n=e[t].split(/\s+(?=(?:(?:[^"]*"){2})*[^"]*$)/);n[0]=Q(n[0]);if(n[0].startsWith("/")){const t=Q(n[0].substring(1));n[0]=`/${t}`}else for(let t=1;t<n.length;t++){const e=n[t].split("="),[r,o]=e,i=Z(r),s=["x1","y1","x2","y2","cx","cy","r","fr","fx","fy"].includes(r);if("style"===r){const e=tt(o);n[t]=`${i}={[${e}]}`}else if(s){const e=Number(o.replaceAll('"',""));n[t]=`${i}={${e}}`}else n[t]=`${i}=${o}`}e[t]=`<${n.join(" ")}>`}const n=e.join("\n");console.log(n)}};const ht=class extends dt{orientationCoords;constructor(){super(),this.orientationCoords={x1:0,y1:0,x2:1,y2:1}}setOrientation(t){const e=function(t){const e="number"!=typeof t,{isNaN:n}=Number,r=n(t);if(e||r)throw new TypeError(e?`Expected 'degrees' to be a valid number, but got: ${t}`:`Conversion to radians will result in NaN for degrees: ${t}`);const{PI:o}=Math;return c(t*o/180,3)}(t);this.orientationCoords=function(t){const e="number"!=typeof t,{isNaN:n}=Number,r=n(t);if(e||r)throw new TypeError(e?`Expected 'rad' to be a valid number, but got: ${t}`:`Calculation of coordinates resulted in NaN for radian: ${t}`);const{cos:o,sin:i}=Math,s=c((o(t)+1)/2,3),a=c((i(t)+1)/2,3);return{x1:s,y1:a,x2:c(1-s,3),y2:c(1-a,3)}}(e)}addStopColor(t){const e=["id","color","offset","opacity"];for(const n of e){if(!t.hasOwnProperty(n))throw new TypeError(`Invalid stop color for the linear gradient, ${n} does not exist on the passed object`)}this.stopColors.push(t),this.sortStopColorsArrayById()}generateSvgGradient(){const t=this.stopColors.length;if(t<2)return"none";let e="";for(let n=0;n<t;n++){const r=this.stopColors[n],{offset:o,color:i,opacity:s,id:a}=r;let c=o;null===o&&(console.log(n/(t-1)),c=n/(t-1)*100+"%"),e+=`\n      <stop offset="${c}" style="stop-color: ${i}; stop-opacity: ${s}" data-stop-id=${a} />\n      `}const{x1:n,x2:r,y1:o,y2:i}=this.orientationCoords;return`\n<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 100 100" preserveAspectRatio="none">\n  <defs>\n    ${`\n<linearGradient \n  id="svg-linear-gradient" \n\n  x1="${n}" \n  y1="${o}"\n  x2="${r}"\n  y2="${i}"\n\n  spreadMethod="${this.spreadMethod}"\n\n  gradientTransform="${this.gradientTransform}"\n  gradientUnits="${this.gradientUnits}"\n  >\n  ${e}\n</linearGradient>\n`}\n  </defs>\n  <rect width="100%" height="100%" fill="url(#svg-linear-gradient)" />\n</svg>\n`}};const pt=class extends dt{radialGradientAttributes;constructor(){super(),this.radialGradientAttributes={centerX:"50%",centerY:"50%",radius:"50%",focalRadius:"0%",focalX:"50%",focalY:"50%"}}setCenter(t,e){this.radialGradientAttributes.centerX=t,this.radialGradientAttributes.centerY=e}setRadius(t){this.radialGradientAttributes.radius=t}setFocalRadius(t){this.radialGradientAttributes.focalRadius=t}setFocalPoint(t,e){this.radialGradientAttributes.focalX=t,this.radialGradientAttributes.focalY=e}addStopColor(t){const e=["id","color","offset","opacity"];for(const n of e){if(!t.hasOwnProperty(n))throw new TypeError(`Invalid stop color for the linear gradient, ${n} does not exist on the passed object`)}this.stopColors.push(t),this.sortStopColorsArrayById()}generateSvgGradient(){const t=this.stopColors.length;if(t<2)return"none";let e="";for(let n=0;n<t;n++){const r=this.stopColors[n],{offset:o,color:i,opacity:s,id:a}=r;let c=o;null===o&&(console.log(n/(t-1)),c=n/(t-1)*100+"%"),e+=`\n      <stop offset="${c}" style="stop-color: ${i}; stop-opacity: ${s}" data-stop-id="${a}" />\n    `}const{centerX:n,centerY:r,radius:o,focalRadius:i,focalX:s,focalY:a}=this.radialGradientAttributes;return`\n<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" width="100%" height="100%" preserveAspectRatio="none">\n  <defs>\n    ${`\n    <radialGradient \n      id="svg-radial-gradient" \n\n      cx="${n}" \n      cy="${r}" \n      r="${o}"\n      fr="${i}" \n      fx="${s}" \n      fy="${a}"\n\n      spreadMethod="${this.spreadMethod}"\n\n      gradientTransform="${this.gradientTransform}"\n      gradientUnits="${this.gradientUnits}"\n    >\n      ${e}\n    </radialGradient>\n  `}\n  </defs>\n  <rect width="100%" height="100%" fill="url(#svg-radial-gradient)" />\n</svg>\n`}};const ut=class{create(t){switch(t){case"linear":return new ht;case"radial":return new pt;default:throw new Error("conic"===t?"Conic gradients are not currently supported with SVGs in 2023":`Unsupported SVG gradient type: ${t}`)}}};const ft=class{stopColors;context;constructor(t){this.context=t,this.stopColors=[]}getOffsetByIndex(t,e){return t/(e-1)}normalizeOpacity(t){const{color:e,opacity:n}=t,r=`${e}${h(n)}`;t.color=r}normalizeOffset(t){const{offset:e}=t,n=null===e?NaN:l(e);t.offset=n}sortStopColorsArrayById(){this.stopColors.sort(((t,e)=>t.id-e.id))}changeColorOrderById(t,e){const n=this.stopColors.findIndex((e=>e.id===t)),r=this.stopColors.findIndex((t=>t.id===e));if(-1===n||-1===r)throw new RangeError(`Invalid id arguments, expected both to ids to return their referring objects but couldn't find them, with oldId (${t}): ${1!==r?"found old object":"couldn't find old object"} and with newId (${e}): ${1!==n?"found new object":"couldn't find new object"}`);const o=this.stopColors[n];o.id=e,this.stopColors.splice(n,1,o);const i=this.stopColors[r];i.id=t,this.stopColors.splice(r,1,i),this.sortStopColorsArrayById()}};const gt=class extends ft{centerPosition;startAngle;constructor(t){super(t),this.context=t,this.centerPosition={x:0,y:0},this.startAngle=0}setCenterPosition(t,e){this.centerPosition={x:t,y:e}}setStartAngle(t){const e=u(t);this.startAngle=e}generateCanvasGradient(){const{x:t,y:e}=this.centerPosition,n=this.context.createConicGradient(t,e,this.startAngle);if(this.stopColors.length<2)return{gradient:n,code:null};let r=`\nconst canvas = document.getElementById("canvas");\nconst ctx = canvas.getContext("2d");\nconst gradient = ctx.createConicGradient(${t}, ${e}, ${this.startAngle});\n`;for(let t=0;t<this.stopColors.length;t++){const e=this.stopColors[t],{color:o,offset:i}=e,s=i,{isNaN:a}=Number,c=a(s)?this.getOffsetByIndex(t,this.stopColors.length):s;n.addColorStop(c,o),r+=`gradient.addColorStop(${c}, ${o});\n`}return r+="\nctx.fillStyle = gradient;\n\nctx.fillRect(0, 0, canvas.width, canvas.height);\n",{gradient:n,code:r}}};const bt=class extends ft{initialCoords;constructor(t){super(t),this.context=t;const{width:e,height:n}=this.context.canvas;this.initialCoords={x0:0,x1:e,y0:0,y1:n}}addStopColor(t){const e=["id","color","offset","opacity"];for(const n of e){if(!t.hasOwnProperty(n))throw new TypeError(`Invalid stop color for the linear gradient, ${n} does not exist on the passed object`)}this.normalizeStopColorValues(t),this.stopColors.push(t),this.sortStopColorsArrayById()}setInitialCoords(t,e,n,r){this.initialCoords={x0:t,x1:e,y0:n,y1:r}}normalizeStopColorValues(t){this.normalizeOpacity(t),this.normalizeOffset(t)}generateCanvasGradient(){const{x0:t,y0:e,x1:n,y1:r}=this.initialCoords,o=this.context.createLinearGradient(t,e,n,r);if(this.stopColors.length<2)return{gradient:o,code:null};const{canvas:i}=this.context,s=t===i.width?"canvas.width":`${t}`,a=n===i.width?"canvas.width":`${n}`;let c=`\nconst canvas = document.querySelector("canvas");\nconst ctx = canvas.getContext("2d");\nconst gradient = ctx.createLinearGradient(${s}, ${e===i.height?"canvas.height":`${e}`}, ${a}, ${r===i.height?"canvas.height":`${r}`});\n`;for(let t=0;t<this.stopColors.length;t++){const e=this.stopColors[t];console.log(e);const{color:n,offset:r}=e,i=r,{isNaN:s}=Number,a=s(i)?this.getOffsetByIndex(t,this.stopColors.length):i;console.log({defaultIndexOffset:a}),o.addColorStop(a,n),c+=`gradient.addColorStop(${a}, ${n});\n`}return c+="\nctx.fillStyle = gradient;\n\nctx.fillRect(0, 0, canvas.width, canvas.height);\n",{gradient:o,code:c}}};const mt=class extends ft{innerCircle;outerCircle;constructor(t){super(t),this.context=t,this.innerCircle={x:0,y:0,radius:0},this.outerCircle={x:0,y:0,radius:0}}setInnerCirclePosition(t,e){this.innerCircle.x=t,this.innerCircle.y=e}setInnerCircleRadius(t){this.innerCircle.radius=t}setOuterCirclePosition(t,e){this.outerCircle.x=t,this.outerCircle.y=e}setOuterCircleRadius(t){this.outerCircle.radius=t}generateCanvasGradient(){const{x:t,y:e,radius:n}=this.innerCircle,{x:r,y:o,radius:i}=this.outerCircle,s=this.context.createRadialGradient(t,e,n,r,o,i);if(this.stopColors.length<2)return{gradient:s,code:null};const{canvas:a}=this.context,c=t===a.width?"canvas.width":`${t}`,l=r===a.width?"canvas.width":`${r}`;let d=`\nconst canvas = document.querySelector("canvas");\nconst ctx = canvas.getContext("2d");\nconst gradient = ctx.createLinearGradient(${c}, ${e===a.height?"canvas.height":`${e}`}, ${l}, ${o===a.height?"canvas.height":`${o}`});\n`;for(let t=0;t<this.stopColors.length;t++){const e=this.stopColors[t],{color:n,offset:r}=e,o=r,{isNaN:i}=Number,a=i(o)?this.getOffsetByIndex(t,this.stopColors.length):o;s.addColorStop(a,n),d+=`gradient.addColorStop(${a}, ${n});\n`}return d+="\nctx.fillStyle = gradient;\n\nctx.fillRect(0, 0, canvas.width, canvas.height);\n",{gradient:s,code:d}}};const vt=class{create(t,e){switch(t){case"linear":return new bt(e);case"radial":return new mt(e);case"conic":return new gt(e);default:throw new Error(`Unsupported canvas gradient type: ${t}`)}}};const yt=class{create(t,e,n){switch(v(t,e),t){case"css":return(new lt).create(e);case"svg":return(new ut).create(e);case"canvas":return(new vt).create(e,n);default:throw new Error(`Unsupported canvas gradient type: ${e}`)}}};B(".menu__add-color-button").addEventListener("click",(function(){const t=X("menu__table-body"),e=X("template__css-linear-gradient");var n;const r=B("tr",(n=e,document.importNode(n.content,!0))),o=B("input[type='color']",r),i=j("input[type='number']",r);o.addEventListener("input",(t=>{const e=t.currentTarget,n=F(e,"td"),r=e.value,o=B("label",n),i=function(t,e=document.body){return getComputedStyle(e).getPropertyValue(t)}("--_label-color",o),{contrastRatio:s,respectsW3CGuidelines:a}=function(t,e){const n=[d(t.slice(1,3)),d(t.slice(3,5)),d(t.slice(5,7))],r=[d(e.slice(1,3)),d(e.slice(3,5)),d(e.slice(5,7))],o=p(n),i=p(r);let s=o>i?(o+.05)/(i+.05):(i+.05)/(o+.05);return s=c(s,2),{contrastRatio:s,respectsW3CGuidelines:s>=4.5}}(r,i);!a&&U("--_label-color","#ffffff"===i?"#000000":"#ffffff",o),o.textContent=et(r,"UPPERCASE"),U("--_cell-bg-color",r,n)}));for(const t of i)t.addEventListener("input",(t=>{const e=t.currentTarget;v(e.valueAsNumber);if(e.id.includes("opacity")){ot(e,Number(V("min",e)),Number(V("max",e)))}}));r.addEventListener("dragstart",nt),r.addEventListener("touchstart",nt,{passive:!0}),r.addEventListener("dragend",nt),r.addEventListener("touchend",nt),t.appendChild(r),rt(t)}));const wt=X("menu__table-body");wt.addEventListener("click",(function(t){const e=t.target,n=W(e),r=n[0].includes("top"),o=n[0].includes("bottom"),i=n[0].includes("delete");if(v(e),v(n),et(e.tagName,"lowercase").includes("tbody"))return;const s=F(e,"tr"),a=F(s,"tbody");var c,l,d;r&&function(t,e){const n=j("tr",e),r=n.indexOf(t);if(-1===r)return void console.error("Row not found in the table body.");if(r>0){const o=n[r-1];e.insertBefore(t,o),rt(e)}}(s,a),o&&function(t,e){const n=j("tr",e),r=n.indexOf(t);if(-1===r)return void console.error("Row not found in the table body.");if(r<n.length-1){const o=n[r+1];e.insertBefore(o,t),rt(e)}}(s,a),i&&(v("deleteRow",c=s,"tbody",l=a),d=c,l.removeChild(d),rt(l))})),wt.addEventListener("dragover",(function(t){t.preventDefault();const e=t.currentTarget,n="dragover"===t.type?t.clientY:t.touches[0].clientY,r=B(".dragging");if(!r)throw new Error("No draggable was found!");const o=function(t,e,n=!0){const r=j("[draggable]:not(.dragging)",t);let o=null,i=Number.NEGATIVE_INFINITY;for(const t of r){const{top:r,height:s,left:a,width:c}=t.getBoundingClientRect(),l=n?e-(r+s/2):e-(a+c/2);l<0&&l>i&&(i=l,o=t)}return o}(e,n);null===o?e.appendChild(r):e.insertBefore(r,o),rt(e)}));const xt=new MutationObserver(((t,e)=>{for(const e of t){const t=V(e.attributeName,e.target);e.oldValue!==t&&(v(`The ${e.attributeName} attribute was modified to ${t}`),v(`Previous value: ${e.oldValue}`))}})),_t=B("position-picker");v(_t),xt.observe(_t,{attributes:!0,attributeOldValue:!0,attributeFilter:["x","y"]});const kt=X("index__canvas-gradient");function Ct(){kt.width=kt.clientWidth,kt.height=kt.clientHeight}window.addEventListener("resize",Ct),Ct();const $t=kt.getContext("2d"),Nt={css:(new yt).create("css","linear"),svg:(new yt).create("svg","linear"),canvas:(new yt).create("canvas","linear",$t)},At={css:(new yt).create("css","radial"),svg:(new yt).create("svg","radial"),canvas:(new yt).create("canvas","radial",$t)},It={css:(new yt).create("css","conic"),canvas:(new yt).create("canvas","conic",$t)};v({linearGradients:Nt}),v({radialGradients:At}),v({conicGradients:It})})();