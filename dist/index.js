(()=>{"use strict";const t="\n@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;400;500;700&display=swap);\n@media(prefers-reduced-motion:reduce) {\n    *, :after, :before {\n        animation: none !important;\n        transition: none !important\n    }\n}\n\n*, :after, :before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0\n}\n\n::-moz-selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: var(--selection-color)\n}\n\n::selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: var(--selection-color)\n}\n\nhtml {\n    color-scheme: dark light;\n    scroll-behavior: smooth\n}\n\nbody {\n    background-color: var(--bg-primary);\n    color: var(--color-primary);\n    min-height: 100vh;\n    overflow-x: hidden;\n    transition: background-color .65s ease-in-out, color .35s ease-in-out\n}\n\n:is(ul, ol) {\n    list-style-type: none\n}\n\nbutton {\n    background-color: transparent;\n    border-color: transparent;\n    color: inherit;\n    font-family: inherit\n}\n\nbutton:hover {\n    cursor: pointer\n}\n\nbutton:hover:disabled {\n    cursor: not-allowed\n}\n\ninput {\n    border-color: transparent;\n    font-family: inherit;\n    outline-color: transparent\n}\n\ninput:hover {\n    cursor: pointer\n}\n\ninput:focus {\n    border-color: transparent;\n    outline: transparent\n}\n\ninput:disabled {\n    cursor: not-allowed\n}\n\ntextarea {\n    font-family: inherit\n}\n\ntextarea, textarea:focus {\n    border-color: transparent\n}\n\ntextarea:focus {\n    outline: transparent\n}\n\na {\n    color: inherit;\n    text-decoration: none\n}\n\na:visited {\n    color: currentColor\n}\n\nlabel:hover {\n    cursor: pointer\n}\n\nfieldset {\n    border-color: transparent\n}\n\nlegend {\n    position: static\n}\n\ndialog {\n    inset: 50%;\n    margin: 0;\n    padding: 0;\n    position: fixed;\n    translate: -50% -50%;\n    z-index: 0\n}\n\ndialog, select {\n    border: transparent\n}\n\nselect {\n    font-family: inherit\n}\n\nselect:hover {\n    cursor: pointer\n}\n\noption {\n    font-family: inherit\n}\n\n:is(p, h1, h2, h3, h4, h5, h6, span):empty {\n    display: none !important\n}\ninput[type=text]:hover {\n  cursor: text;\n}\ninput[type=button]:hover {\n  cursor: pointer;\n}\ninput[type=date]:hover {\n  cursor: text;\n}\ninput[type=datetime]:hover {\n  cursor: text;\n}\ninput[type=datetime-local]:hover {\n  cursor: text;\n}\ninput[type=email]:hover {\n  cursor: text;\n}\ninput[type=month]:hover {\n  cursor: text;\n}\ninput[type=week]:hover {\n  cursor: text;\n}\ninput[type=password]:hover {\n  cursor: text;\n}\ninput[type=tel]:hover {\n  cursor: text;\n}\ninput[type=time]:hover {\n  cursor: text;\n}\ninput[type=url]:hover {\n  cursor: text;\n}\ninput[type=submit]:hover {\n  cursor: pointer;\n}\ninput[type=reset]:hover {\n  cursor: pointer;\n}\ninput[type=image]:hover {\n  cursor: pointer;\n}\ninput[type=hidden]:hover {\n  cursor: pointer;\n}\ninput[type=file] {\n  --file-selector-display: initial;\n  --file-selector-width: 80px;\n  --file-selector-height: 21px;\n}\ninput[type=file]:hover {\n  cursor: pointer;\n}\ninput[type=file]::file-selector-button {\n  display: var(--file-selector-display);\n  height: var(--file-selector-height);\n  width: var(--file-selector-width);\n}\ninput[type=color] {\n  background-color: transparent;\n  --color-swatch-display: inline-block;\n  --color-swatch-height: 100%;\n  --color-swatch-border-width: 1px;\n  --color-swatch-border-color: currentColor;\n}\ninput[type=color]:hover {\n  cursor: pointer;\n}\ninput[type=color]::-moz-color-swatch {\n  display: var(--color-swatch-display);\n  height: var(--color-swatch-height);\n  border: var(--color-swatch-border-width) solid var(--color-swatch-border-color);\n}\ninput[type=color]::-webkit-color-swatch {\n  display: var(--color-swatch-display);\n  height: var(--color-swatch-height);\n  border: var(--color-swatch-border-width) solid var(--color-swatch-border-color);\n}\ninput[type=search] {\n  --cancel-button-display: initial;\n  --results-button-display: initial;\n}\ninput[type=search]:hover {\n  cursor: text;\n}\ninput[type=search]::-webkit-search-cancel-button {\n  display: var(--cancel-button-display);\n}\ninput[type=search]::-webkit-search-results-button {\n  display: var(--results-button-display);\n}\ninput[type=number] {\n  --inner-spin-appearance: auto;\n  --outer-spin-appearance: auto;\n  --moz-appearance: initial;\n  /*\n      Ignore the warning, this is to reset the input on Firefox\n      */\n  -moz-appearance: var(--moz-appearance);\n}\ninput[type=number]:hover {\n  cursor: text;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  appearance: var(--inner-spin-appearance);\n}\ninput[type=number]::-webkit-outer-spin-button {\n  appearance: var(--outer-spin-appearance);\n}\ninput[type=range] {\n  border-radius: var(--thumb-border-radius);\n  --track-width: 160px;\n  --track-height: 20px;\n  --track-bg: #e9e9ed;\n  --track-appearance: none;\n  background-color: var(--track-bg);\n  appearance: var(--track-appearance);\n  overflow: hidden;\n  --thumb-appearance: none;\n  --thumb-bg: #484851;\n  --thumb-border-color: white;\n  --thumb-border-width: 0px;\n  --thumb-border-radius: 100vmax;\n  --thumb-width: 15px;\n  --thumb-height: 15px;\n  --inner-track-size: calc(var(--track-width));\n  --inner-track-offset: calc(\n    -1 * var(--track-width) - var(--thumb-width) / 2\n  );\n  --inner-track-bg: #2374ff;\n}\ninput[type=range]:hover {\n  cursor: grab;\n}\ninput[type=range]:active {\n  cursor: grabbing;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n  background-color: var(--track-bg);\n  width: var(--track-width);\n  height: var(--track-bg);\n}\ninput[type=range]::-moz-range-track {\n  background-color: var(--track-bg);\n  width: var(--track-width);\n  height: var(--track-bg);\n}\ninput[type=range]::-webkit-slider-thumb {\n  appearance: var(--thumb-appearance);\n  -webkit-appearance: var(--thumb-appearance);\n  background-color: var(--thumb-bg);\n  color: var(--thumb-bg);\n  border: var(--thumb-border-width) solid var(--thumb-border-color);\n  border-radius: var(--thumb-border-radius);\n  width: var(--thumb-width);\n  height: var(--thumb-height);\n  box-shadow: var(--inner-track-offset) 0 0 var(--inner-track-size) var(--inner-track-bg);\n}\ninput[type=range]::-moz-range-thumb {\n  appearance: var(--thumb-appearance) !important;\n  background-color: var(--thumb-bg);\n  border: var(--thumb-border-width) solid var(--thumb-border-color);\n  border-radius: var(--thumb-border-radius);\n  width: var(--thumb-width);\n  height: var(--thumb-height);\n  box-shadow: var(--inner-track-offset) 0 0 var(--inner-track-size) var(--inner-track-bg);\n}\n",n="\n\n/* \n    Hides the element and all its descendants from view\n */\n.hide {\n    display: none !important;\n}\n\n/**\n * Visually hide an element, but leave it available for screen readers\n\n https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css\n\n http://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n\n */\n.screen-readers-only {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n}\n\n\n/**\n * Extends the .screen-reader class to allow the element to be focusable when navigated to via the keyboard\n * @link https://github.com/h5bp/html5-boilerplate/blob/master/dist/css/main.css\n * @link https://www.drupal.org/node/897638\n */\n.screen-reader-focusable {\n    &:is(:active, :hover) {\n        clip: auto;\n        height: auto;\n        margin: 0;\n        overflow: visible;\n        position: static;\n        white-space: normal;\n        width: auto;\n    }\n}\n\n/* \n    Disables pointer (click on desktop and tap on mobile) events for the element and its descendants \n*/\n.no-pointer-events {\n    pointer-events: none;\n}\n\n\n.active {}\n\n.dragging {\n    opacity: 25%;\n}\n",e="\n:host {\n    --bg-primary: rgb(255, 255, 255);\n    --bg-secondary: #f0efef;\n    --bg-tertiary: #676767;\n\n    --semi-transparent-bg: rgba(255, 255, 255, 50%);\n\n    --color-primary: black;\n    --color-secondary: gray;\n\n    --scrollbar-track-bg-color: white;\n\n    --disabled-button-bg: #afafaf;\n\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0;\n\n    --selection-bg-color: hwb(240 0% 0%);\n    --selection-color: white;\n}\n\n::backdrop {\n    --backdrop-bg-color: rgba(255, 255, 255, 0.5);\n\n    --scrollbar-track-bg-color: white;\n\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0;\n}\n",r="\n@media (prefers-color-scheme: dark) {\n    :host {\n        --bg-primary: black;\n        --bg-secondary: #232323;\n        --bg-tertiary: #7a7a7a;\n\n        --color-primary: white;\n\n        --semi-transparent-bg: rgba(0, 0, 0, 50%);\n\n        --scrollbar-track-bg-color: black;\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f;\n\n        --selection-bg: #838383;\n        --selection-color: white;\n\n        --selection-bg-color: orange;\n        --selection-color: black;\n    }\n\n\n    ::backdrop {\n        --backdrop-bg-color: rgba(0, 0, 0, 0.5);\n\n        --scrollbar-track-bg-color: black;\n\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f;\n    }\n}\n",o=document.createElement("template");o.innerHTML=`\n  <style>\n    ${n}\n    ${t}\n    ${e}\n    ${r}\n\n    /* Actual CSS style for the web component*/\n    \n web-component{\n  isolation: isolate;\n  /* Other CSS styles here */\n }\n\n  </style>\n  \n  \n <figure>\n  <slot name="title"></slot>\n  <slot name="image"></slot>\n </figure>\n\n`;class i extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"}),n=o.content.cloneNode(!0);t.appendChild(n)}static get observedAttributes(){return[]}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(t,n,e){t}}customElements.define("web-component",i);class a{lineWidth;lineFill;circleFill;circleRadius;midX;midY;ctx;strokeWidth;canvas;constructor(t){this.canvas=t,this.ctx=this.canvas.getContext("2d"),this.lineWidth=2,this.lineFill="#5b5b5b",this.circleFill="#4285f4",this.circleRadius=this.canvas.width/20,this.midX=this.canvas.width/2,this.midY=this.canvas.height/2}drawLine({initX:t,initY:n,arrayOfCoords:e=[{x:0,y:0}],lineDash:r=[],strokeFill:o=this.lineFill,strokeWidth:i=this.lineWidth}){this.ctx.beginPath(),this.ctx.setLineDash(r),this.ctx.moveTo(t,n);for(const{x:t,y:n}of e)this.ctx.lineTo(t,n);this.ctx.strokeStyle=o,this.ctx.lineWidth=i,this.ctx.stroke(),this.ctx.closePath()}drawCircle(t,n,e=!1){this.ctx.fillStyle=this.circleFill,this.ctx.beginPath(),this.ctx.arc(t,n,this.circleRadius,0,2*Math.PI),this.ctx.fill(),e&&(this.ctx.strokeStyle=this.lineFill,this.ctx.lineWidth=this.strokeWidth,this.ctx.stroke())}}const s=class extends a{offsetPickerX;offsetPickerY;computedOffsetX;computedOffsetY;pointerInfos;constructor(t,n){super(t),this.offsetPickerX=this.midX,this.offsetPickerY=this.midY,this.pointerInfos=n,this.computedOffsetX=0,this.computedOffsetY=0,this.drawCardinalLines()}drawCardinalLines(){this.drawLine({initX:0,initY:this.midY,arrayOfCoords:[{x:this.canvas.width,y:this.midY}],lineDash:[this.lineWidth,this.lineWidth],strokeFill:this.lineFill,strokeWidth:this.lineWidth}),this.drawLine({initX:this.midX,initY:0,arrayOfCoords:[{x:this.midX,y:this.canvas.height}],lineDash:[this.lineWidth,this.lineWidth],strokeFill:this.lineFill,strokeWidth:this.lineWidth})}checkOverflow(){this.offsetPickerX+this.circleRadius>this.canvas.width&&(this.offsetPickerX=this.canvas.width-this.circleRadius);this.offsetPickerY+this.circleRadius>this.canvas.height&&(this.offsetPickerY=this.canvas.height-this.circleRadius)}checkUnderflow(){this.offsetPickerX-this.circleRadius<0&&(this.offsetPickerX=0+this.circleRadius);this.offsetPickerY-this.circleRadius<0&&(this.offsetPickerY=0+this.circleRadius)}updateTrackerCoords(){const{isPressing:t,x:n,y:e}=this.pointerInfos;t&&(this.offsetPickerX=n,this.offsetPickerY=e,this.checkOverflow(),this.checkUnderflow(),this.computedOffsetX=Math.round((this.offsetPickerX-this.midX)/10*4.5),this.computedOffsetY=Math.round((this.midY-this.offsetPickerY)/10*4.5))}getOffsets(t=!1){const n=(this.computedOffsetX+20)/40,e=(this.computedOffsetY+20)/40,r=Math.round(100*n),o=Math.round(100*(1-e));return t?{x:r,y:o}:{x:this.computedOffsetX,y:this.computedOffsetY}}trackPointer(){this.drawCardinalLines(),this.drawLine({initX:this.midX,initY:this.midY,arrayOfCoords:[{x:this.offsetPickerX,y:this.offsetPickerY}],strokeFill:this.lineFill,strokeWidth:this.lineWidth}),this.drawCircle(this.offsetPickerX,this.offsetPickerY)}};function c(t,n){t.preventDefault();const e="mouse"===t.pointerType&&0===t.button,r="touch"===t.pointerType;(e||r)&&(n.isPressing="pointerdown"===t.type)}const{log:l,error:h,table:d,time:u,timeEnd:p,timeStamp:b,timeLog:f,assert:m,clear:g,count:v,countReset:y,group:w,groupCollapsed:k,groupEnd:x,profile:C,profileEnd:_,trace:N,warn:E,debug:A,info:L,dir:S,dirxml:P}=console;function R(t,n){return function(t,n){if(!n)return Array.from(document.getElementsByClassName(t));const e=n?.tagName?.includes("-");return e?Array.from(n.shadowRoot.getElementsByClassName(t)):Array.from(n.getElementsByClassName(t))}(t,n)[0]}function Y(t,n){if(!n)return document.querySelector(t);const e=n?.tagName?.includes("-");return e?n.shadowRoot.querySelector(t):n.querySelector(t)}function $(t,n){if(!n)return Array.from(document.querySelectorAll(t));return n.tagName.includes("-")?Array.from(n.shadowRoot.querySelectorAll(t)):Array.from(n.querySelectorAll(t))}function X(t,n){return t.closest(n)}function T(t,n,e=document.body){const r=n.toString();return e.style.setProperty(t,r)}function I(t,n,e){e.setAttribute(t,n.toString())}function O(t,n){return n.getAttribute(t)}const F=document.createElement("template");F.innerHTML=`\n\x3c!-- CSS Style --\x3e\n  <style>\n    ${n}\n    ${t}\n    ${e}\n    ${r}\n\n    /* Actual CSS style for the web component*/\n    \n.picker__container {\n  display: flex;\n  flex-direction: row;\n  gap: 15px;\n}\n\n.picker__containers {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n\n.picker{\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 15px;\n}\n\n.picker__label {\n  display: inline-flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 15px;\n  text-align: right;\n\n  padding: 5px;\n}\n\n.picker__output-container {\n   background-color: transparent;\n   border: 2px solid var(--bg-tertiary);\n   border-radius: 5px;\n   width: 50px;\n   font-size: 16px;\n}\n\n.picker__canvas {\n  --_canvas-size: 100px;\n\n  border: 2px solid var(--bg-tertiary);\n  width: var(--_canvas-size);\n  height: var(--_canvas-size);\n\n  border-radius: 5px;\n}\n\n  </style>\n\n  \x3c!-- HTML Content --\x3e\n  \n<div class="picker__container">\n  <h2 class="picker__title">Offsets</h2>\n\n  <div class="picker">\n\n    <div class="picker__outputs">\n      <div class="picker__output-container">\n        <label for="x-offset" class="picker__label">X offset</label>\n        <output class="picker__output-field" id="x-offset" value="50" min="0" max="100" ></output>\n        <span class="picker__unit">%</span>\n      </div>\n  \n      <div class="picker__output-container">\n        <label for="y-offset" class="picker__label">Y offset</label>\n        <output class="picker__output-field" id="y-offset" value="50" min="0" max="100" ></output>\n        <span class="picker__unit">%</span>\n      </div>\n    </div>\n    \n    <canvas class="picker__canvas" width="200" height="200"></canvas>\n  </div>\n</div>\n\n`;class W extends HTMLElement{animationId;canvas;pointerInfos;effectHandler;ctx;constructor(){super();const t=this.attachShadow({mode:"open"}),n=F.content.cloneNode(!0);t.appendChild(n),this.animationId=NaN,this.pointerInfos={x:NaN,y:NaN,isPressing:!1},this.effectHandler,this.canvas,this.ctx,this.animateCanvas=this.animateCanvas.bind(this)}static get observedAttributes(){return["x","y","title"]}get x(){return Number(this.getAttribute("x"))}set x(t){const n=t.toString();this.setAttribute("x",n)}get y(){return Number(this.getAttribute("y"))}set y(t){const n=t.toString();this.setAttribute("y",n)}get title(){return this.getAttribute("title")}set title(t){this.setAttribute("title",t)}setCanvasSize(t,n){this.canvas.width=t,this.canvas.height=n}animateCanvas(){try{this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.animationId=requestAnimationFrame(this.animateCanvas),this.effectHandler.updateTrackerCoords(),this.effectHandler.trackPointer()}catch(t){console.error("Stopped the canvas animation",t),this.cancelAnimation()}}cancelAnimation(){cancelAnimationFrame(this.animationId)}connectedCallback(){l("Added the position picker to the DOM");const t=Y(".picker__container",this.shadowRoot);t.addEventListener("pointerup",(t=>{c(t,this.pointerInfos)})),t.addEventListener("pointerdown",(t=>{c(t,this.pointerInfos)})),t.addEventListener("pointermove",(t=>{!function(t,n,e){t.preventDefault();const r=e.getBoundingClientRect();n.x=Math.round(t.x-r.x),n.y=Math.round(t.y-r.y)}(t,this.pointerInfos,this.canvas);const{x:n,y:e}=this.effectHandler.getOffsets(!0);this.x=n,this.y=e}));Y(".picker__title",this.shadowRoot).textContent=this.title;const n=Y("canvas",this.shadowRoot);this.canvas=n,this.ctx=this.canvas.getContext("2d"),this.setCanvasSize(100,100),this.effectHandler=new s(this.canvas,this.pointerInfos),this.animateCanvas()}disconnectedCallback(){this.cancelAnimation()}attributeChangedCallback(t,n,e){const r=Y(".picker__title",this.shadowRoot),o=Y("output#x-offset",this.shadowRoot),i=Y("output#y-offset",this.shadowRoot);switch(t){case"x":o.textContent=e;break;case"y":i.textContent=e;break;case"title":r.textContent=e}}}customElements.define("position-picker",W);const z=document.createElement("template");z.innerHTML=`\n\x3c!-- CSS Style --\x3e\n  <style>\n    ${n}\n    ${t}\n    ${e}\n    ${r}\n\n    /* Actual CSS style for the web component*/\n    \n\n  </style>\n\n  \x3c!-- HTML Content --\x3e\n  \n\n`;class M extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"}),n=z.content.cloneNode(!0);t.appendChild(n)}static get observedAttributes(){return[]}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(t,n,e){t}}function H(t){return Number(`0x${t}`)}function B(t,n){const e=[H(t.slice(1,3)),H(t.slice(3,5)),H(t.slice(5,7))],r=[H(n.slice(1,3)),H(n.slice(3,5)),H(n.slice(5,7))],o=D(e),i=D(r);let a=o>i?(o+.05)/(i+.05):(i+.05)/(o+.05);return a=function(t,n=3){if("number"!=typeof t||"number"!=typeof n)throw new TypeError(`Expected both arguments to be of type number, instead got:\n Number: ${t} of type ${typeof t}\n Float: ${n} of type ${typeof n}\n `);const{isNaN:e}=Number;if(e(t)||e(n))throw new TypeError(`Got NaN number values:\nNumber: ${t} of type ${typeof t}\nFloat: ${n} of type ${typeof n}\n    `);const r=10**n;return Math.trunc(t*r)/r}(a,2),{contrastRatio:a,respectsW3CGuidelines:a>=4.5}}function D(t){const[n,e,r]=t.map((t=>(t/=255)<=.03928?t/12.92:((t+.055)/1.055)**2.4));return.2126*n+.7152*e+.0722*r}function q(t,n){if("string"!=typeof t||"string"!=typeof n)throw new TypeError(`Invalid arguments, expected string and option to be strings, instead got respective types: ${typeof t} and ${typeof n}`);switch(n.toLowerCase().trim()){case"lowercase":return t.toLowerCase();case"uppercase":return t.toUpperCase();case"titlecase":{const n=t.split(" ");for(let t=0;t<n.length;t++){const e=n[t].charAt(0).toUpperCase(),r=n[t].slice(1).toLowerCase();n[t]=e+r}return n.join(" ")}case"sentencecase":{const n=t.split(/(?<=[.?!])/);for(let t=0;t<n.length;t++){const e=n[t].trim();if(0===e.length){n[t]="";continue}const r=e.charAt(0).toUpperCase(),o=e.slice(1).toLowerCase();n[t]=r+o}return n.join(" ")}default:throw new Error(`Formatting text error, option not available for: ${n}`)}}function U(t){const n=t.target;var e;t.type.includes("start")?(e="dragging",n.classList.add(e)):function(t,n){t.classList.remove(n)}(n,"dragging")}function j(t){const n=$("tr",t),e=["color","offset","opacity"];for(let t=0;t<n.length;t++){const r=$("td",n[t]),o=t+1;Y("p",r[1]).textContent=`${o}.`;for(let t=0;t<e.length;t++){const n=e[t],i=Y("label",r[t+2]),a=Y("input",r[t+2]),s=`input-${n}-${o}`;I("for",s,i),I("id",s,a)}}l(n)}function G(t,n,e){if(!(t instanceof HTMLInputElement))throw new TypeError("Input parameter must be an input element");if("number"!=typeof n||"number"!=typeof e)throw new TypeError("Invalid min and max values. Both must be numbers");const{isNaN:r}=Number;if(r(n)||r(e))throw new TypeError("Invalid min and max values. Both must not be NaN");if(n>e)throw new RangeError(`Invalid min and max values, min > max: ${n} and max: ${e}`);const o=t.valueAsNumber>e;o&&(t.valueAsNumber=e);const i=t.valueAsNumber<n;i&&(t.valueAsNumber=n),l(o,i)}customElements.define("angle-picker",M);R("menu__add-color-button").addEventListener("click",(function(){const t=R("menu__table-body"),n=R("template__css-linear-gradient");var e;const r=Y("tr",(e=n,document.importNode(e.content,!0))),o=Y("input[type='color']",r),i=$("input[type='number']",r);o.addEventListener("input",(t=>{const n=t.currentTarget,e=X(n,"td"),r=n.value,o=Y("label",e),i=function(t,n=document.body){return getComputedStyle(n).getPropertyValue(t)}("--_label-color",o),{contrastRatio:a,respectsW3CGuidelines:s}=B(r,i);!s&&T("--_label-color","#ffffff"===i?"#000000":"#ffffff",o),o.textContent=q(r,"UPPERCASE"),T("--_cell-bg-color",r,e)}));for(const t of i)t.addEventListener("input",(t=>{const n=t.currentTarget;l(n.valueAsNumber);if(n.id.includes("opacity")){G(n,Number(O("min",n)),Number(O("max",n)))}}));r.addEventListener("dragstart",U),r.addEventListener("touchstart",U,{passive:!0}),r.addEventListener("dragend",U),r.addEventListener("touchend",U),t.appendChild(r),j(t)}));const V=R("menu__table-body");V.addEventListener("click",(function(t){const n=t.target,e=(r=n,Array.from(r.classList));var r;const o=e[0].includes("top"),i=e[0].includes("bottom"),a=e[0].includes("delete");if(l(n),l(e),q(n.tagName,"lowercase").includes("tbody"))return;const s=X(n,"tr"),c=X(s,"tbody");var h,d,u;o&&function(t,n){const e=$("tr",n),r=e.indexOf(t);if(-1===r)return void console.error("Row not found in the table body.");if(r>0){const o=e[r-1];n.insertBefore(t,o),j(n)}}(s,c),i&&function(t,n){const e=$("tr",n),r=e.indexOf(t);if(-1===r)return void console.error("Row not found in the table body.");if(r<e.length-1){const o=e[r+1];n.insertBefore(o,t),j(n)}}(s,c),a&&(l("deleteRow",h=s,"tbody",d=c),u=h,d.removeChild(u),j(d))})),V.addEventListener("dragover",(function(t){t.preventDefault();const n=t.currentTarget,e="dragover"===t.type?t.clientY:t.touches[0].clientY,r=Y(".dragging");if(!r)throw new Error("No draggable was found!");const o=function(t,n,e=!0){const r=$("[draggable]:not(.dragging)",t);let o=null,i=Number.NEGATIVE_INFINITY;for(const t of r){const{top:r,height:a,left:s,width:c}=t.getBoundingClientRect(),l=e?n-(r+a/2):n-(s+c/2);l<0&&l>i&&(i=l,o=t)}return o}(n,e);null===o?n.appendChild(r):n.insertBefore(r,o),j(n)}))})();