@use "../utils/" as *;

.index {
    height: 100dvh;
    flex: 1;

    position: relative;

    &__menu-container {
        backdrop-filter: blur(20px);

        position: fixed;
        top: 50%;

        width: 85%;
        height: 80dvh;

        translate: -100% -50%;
        transition: translate 350ms ease-in-out;

        border: 2px solid rgb(212, 212, 212);
        border-left: none;

        padding: 10px;
        padding-right: 0;



        &.active {
            translate: 0% -50%;
        }


    }

    &__css-gradient {
        background-image: linear-gradient(90deg, #bdc3e1 50%, #f9917e 50%);
        height: 100%;
    }

    &__svg-gradient {
        height: 100%;
    }

    &__canvas-gradient {
        height: 100%;
    }
}


.menu {

    width: 100%;

    color: white;

    &__add-color-button {
        background-color: blue;

        padding-inline: 10px;
        padding-block: 5px;

        border-radius: 100vmax;
    }

    &__table-container {
        --_scrollbar-bg: rgba(255, 255, 255, 25%);

        --_scrollbar-thumb-border-width: 0;
        --_scrollbar-thumb-bg: white;
        --_scrollbar-thumb-bg-hover: rgba(255, 255, 255, 80%);
        --_scrollbar-thumb-bg-active: rgba(255, 255, 255, 50%);


        min-height: 78px;
        height: 250px;
        max-height: 750px;

        @include tablet-only {
            min-height: 250px;
            max-height: 500px;
        }

        @include mobile-only {
            min-height: 250px;
            max-height: 500px;
        }

        overflow-y: auto;
        overflow-x: hidden;

        resize: vertical;

        &::-webkit-resizer {
            background-color: transparent;
            width: 10;
            height: 10;
            border-left: 10px solid transparent;
            /* Adjust the size as needed */
            border-top: 10px solid rgba(255, 255, 255, 50%);
            /* Adjust the size and color as needed */
            cursor: se-resize;
            /* Set the cursor style for the resize handle */
        }



    }


    &__table {
        // 
        display: flex;
        flex-direction: column;

        height: 100%;
        width: 100%;
    }

    &__table-body {
        // 
        display: block;
        flex: 1;

    }

    &__table-row {
        --_background-color: #3b3b3b57;

        background-color: var(--_background-color);
        // 
        display: table;
        table-layout: fixed;

        width: 100%;

        border-radius: 10px;
        border: 2px solid transparent;
        transition: border-color .25s;

        padding: 4px 6px;

        &:not(:last-child) {
            margin-bottom: 10px;
        }


        @include tablet-only {
            @include center-flex-column(5px);

            text-align: center;
        }

        @include mobile-only {
            @include center-flex-column(5px);

            text-align: center;
        }
    }

    &__table-cell {
        // 
        width: min-content;
        text-align: center;

        // background-color: var(--semi-transparent-bg);
        // border-radius: 8px;
        // border: 2px solid transparent;
        // transition: border-color .25s;

        // padding: 4px 6px;




        font-family: inherit;

    }

    &__table-cell-content {
        @include center-flex(5px);
    }


    &__label {
        //
    }

    &__input {
        //
    }


    &__order-changer {
        font-size: 16px;
        font-weight: 500;

        border: 2px solid currentColor;
        padding: 10px;
    }


    &__gradient-types {
        @include center-flex-column;

        &--inputs {
            @include center-flex(15px);

        }

        & label {
            display: inline-flex;
            gap: 5px;
        }
    }

    &__creation-language {}

    &__orientation {}


    &__angle-picker {
        @include circle-style;

        border: 2px solid currentColor;

        height: 100px;

        background: green;

        position: relative;

        &--center-dot {
            content: "";
            @include circle-style;

            position: absolute;
            @include absolute-center;

            height: 5px;


            background-color: currentColor;
        }


        &--marker {
            position: absolute;
            height: var(--_size);

            &:nth-child(odd) {
                height: calc(var(--_size)/1.5);
            }

            aspect-ratio: 1/2;



            top: var(--_top);
            left: var(--_left);

            translate: -50% -50%;

            rotate: var(--_initial-degrees);

            background-color: red;
        }

        @each $angle in 0,
        45,
        90,
        135,
        180,
        225,
        270,
        315 {
            &--marker-#{$angle}-deg {
                --_size: 8px;

                --_initial-degrees: #{$angle}deg;
                --_degrees: #{$angle - 90}deg;


                // Define the offset in pixels
                --_offset: 44px; // Adjust this value as needed

                // Calculate the top and left positions with the offset
                --_top: calc(50% + var(--_offset) * sin(var(--_degrees)));
                --_left: calc(50% + var(--_offset) * cos(var(--_degrees)));
            }
        }

    }

}